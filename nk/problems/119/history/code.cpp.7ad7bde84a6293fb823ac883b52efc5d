class Solution {
public:
    set<int> GetLeastNumbers_Solution(vector<int> input, int k) {
        if (input.empty() || k > input.size()) {
            return set<int>();
        }
        int p = 0;
        int b = 0;
        int e = input.size();
        while (p != k) {
            p = partition(input, b, e, input[b]);
            if (p == b) {
                ++b;
                continue;
            }
            if (p < k) {
                b = p;
            } else {
                e = p;
            }
        }
        set<int> ret;
        for (int i = 0; i < k; ++i) {
            ret.insert(input[i]);
        }
        return ret;
    }
    int partition(vector<int>& arr, int b, int e, int target) {
        while (b < e) {
            while (b < e && arr[b] < target) ++b;
            while (b < e && arr[e - 1] >= target) --e;
            if (b < e) {
                swap(arr[b], arr[e - 1]);
            }
        }
        return b;
    }
};
